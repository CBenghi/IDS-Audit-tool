// <auto-generated/>
// This code was automatically generated.
// Any changes made to this file will be lost.

using System.Text.RegularExpressions;

namespace IdsLib.IdsSchema.XsNodes
{
	public static partial class XsTypes
	{
		private readonly static Regex regexBoolean = new(@"^(true|false|0|1)$", RegexOptions.Compiled);
		private readonly static Regex regexDate = new(@"^\d{4}-\d{2}-\d{2}(Z|([+-]\d{2}:\d{2}))?$", RegexOptions.Compiled);
		private readonly static Regex regexDateTime = new(@"^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|([+-]\d{2}:\d{2}))?$", RegexOptions.Compiled);
		private readonly static Regex regexDouble = new(@"^([-+]?[0-9]*\.?[0-9]*([eE][-+]?[0-9]+)?|NaN|\+INF|-INF)$", RegexOptions.Compiled);
		private readonly static Regex regexDuration = new(@"^[-+]?P(\d+Y)?(\d+M)?(\d+D)?(T(\d+H)?(\d+M)?(\d+S)?)?$", RegexOptions.Compiled);
		private readonly static Regex regexInteger = new(@"^[+-]?(\d+)$", RegexOptions.Compiled);
		private readonly static Regex regexString = new(@"^.?$", RegexOptions.Compiled);
		private readonly static Regex regexTime = new(@"^\d{2}:\d{2}:\d{2}(\.\d+)?(Z|([+-]\d{2}:\d{2}))?$", RegexOptions.Compiled);
	}
}
